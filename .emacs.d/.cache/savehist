;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(set-variable-value-history input-method-history helm-gtags--completing-history command-history search-ring c-set-style-history ido-file-history gud-gdb-history ido-buffer-history helm-M-x-input-history minibuffer-history))
(setq set-variable-value-history '("aaa"))
(setq helm-gtags--completing-history '("string" #("void" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) #("pop_front" 0 9 (fontified t)) #("sort" 0 4 (fontified t face font-lock-variable-name-face)) #("string" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face))))
(setq command-history '((c++-mode) (helm-M-x nil "c++-mode") (set-variable 'ac-clang-cflags 'aaa nil) (helm-M-x nil #("set-variable" 0 12 (match-part "set-variable"))) (find-variable 'ac-clang-flags) (helm-M-x nil #("find-variable" 0 13 (match-part "find-variable"))) (helm-M-x nil #("set-variable" 0 12 (match-part "set-variable"))) (c++-mode) (helm-M-x nil "c++-mode") (package-install 'auto-complete-clang) (helm-M-x nil #("package-install" 0 15 (match-part "package-install"))) (describe-function 'lisp-interaction-mode) (lisp-interaction-mode) (helm-M-x nil "lisp-interaction-mode") (c-mode) (helm-M-x nil "c-mode") (ac-clang-syntax-check) (helm-M-x nil "ac-clang-syntax-check") (ac-clang-syntax-check) (helm-M-x nil "ac-clang-syntax-check") (ac-clang-syntax-check) (helm-M-x nil "ac-clang-syntax-check") (ac-clang-syntax-check) (helm-M-x nil #("ac-clang-syntax-check" 0 21 (match-part "ac-clang-syntax-check"))) (helm-gtags-select) (helm-M-x nil "helm-gtags-select") (helm-M-x nil #("package-install" 0 15 (match-part "package-install"))) (helm-gtags-find-files "string") (helm-M-x nil "helm-gtags-find-files") (helm-gtags-select) (helm-M-x nil "helm-gtags-select") (c++-mode) (helm-M-x nil "c++-mode") (helm-gtags-select) (helm-M-x nil "helm-gtags-select") (helm-gtags-find-symbol #("void" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face))) (helm-M-x nil "helm-gtags-find-symbol") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (tags-loop-continue) (helm-M-x nil #("tags-loop-continue" 0 18 (match-part "tags-loop-continue"))) (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-find-tag "pop_front") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-find-tag "pop_front") (helm-gtags-dwim) (helm-M-x nil "helm-gtags-dwim") (helm-gtags-find-tag #("pop_front" 0 9 (fontified t))) (helm-M-x nil "helm-gtags-find-tag") (helm-gtags-find-tag #("pop_front" 0 9 (fontified t))) (helm-M-x nil "helm-gtags-find-tag") (helm-gtags-find-tag #("sort" 0 4 (fontified t face font-lock-variable-name-face))) (helm-M-x nil "helm-gtags-find-tag") (helm-gtags-find-tag #("string" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face))) (helm-M-x nil "helm-gtags-find-tag") (helm-gtags-find-tag #("string" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face))) (helm-M-x nil "helm-gtags-find-tag") (end-of-defun 1) (helm-M-x nil "end-of-defun") (end-of-defun 1) (helm-M-x nil "end-of-defun") (backward-sexp 1) (helm-M-x nil "backward-sexp") (beginning-of-defun-raw 1) (helm-M-x nil "beginning-of-defun-raw") (helm-gtags-mode 'toggle) (helm-M-x nil "helm-gtags-mode") (package-install 'helm-gtags) (helm-M-x nil "package-install") (describe-key [201326639] 1 nil) (describe-key "\257" 1 nil) (global-set-key [134217775] 'auto-complete) (helm-M-x nil #("global-set-key" 0 14 (match-part "global-set-key"))) (c++-mode) (helm-M-x nil "c++-mode") (describe-key "\257" 1 nil) (global-unset-key "\257") (helm-M-x nil #("global-unset-key" 0 16 (match-part "global-unset-key"))) (global-set-key [134217775] 'auto-complete) (helm-M-x nil #("global-set-key" 0 14 (match-part "global-set-key"))) (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (c++-mode) (helm-M-x nil "c++-mode") (describe-key "\257" 1 nil) (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (describe-key [201326639] 1 nil) (package-install 'ac-clang) (helm-M-x nil #("package-install" 0 15 (match-part "package-install"))) (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (c++-mode) (helm-M-x nil "c++-mode") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (auto-complete) (helm-M-x nil "auto-complete") (c++-mode) (helm-M-x nil "c++-mode") (c++-mode) (helm-M-x nil "c++-mode") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (ac-complete) (helm-M-x nil #("ac-complete" 0 11 (match-part "ac-complete"))) (describe-key "\257" 1 nil) (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (auto-complete) (helm-M-x nil "auto-complete") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (c++-mode) (helm-M-x nil "c++-mode") (yas/expand) (helm-M-x nil #("yas/expand" 0 10 (match-part "yas/expand"))) (yas/exit-snippet nil) (helm-M-x nil "yas/exit-snippet") (auto-complete-mode 'toggle) (helm-M-x nil "auto-complete-mode") (c++-mode) (helm-M-x nil "c++-mode")))
(setq search-ring '("ac-setup" "ac-common-" "ac-co" "ac-s" "ac-clang-sourceb" "ac-clang-source" "source" "user" "splic" "ME" "M" "ME" "MEM" "fonts" "theme" "fonts"))
(setq gud-gdb-history '("gdb -i=mi "))
(setq ido-buffer-history '("*Custom Themes*" "assert" "*new snippet*"))
(setq helm-M-x-input-history '("var" "variable" "set-v" "p" "lisp-it" "c-mode" #("reverse" 0 7 (fontified t face font-lock-function-name-face)) "ac-clang-" #("main" 0 4 (fontified t face font-lock-function-name-face)) "pa" "helm-gtags-find-f" "c++" "helm-ga-s" "helm-gtags" #("pop_front" 0 9 (fontified t)) "tag-con" #("pop_front" 0 9 (fontified t)) #("void" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) #("pop_front" 0 9 (fontified t)) #("void" 0 3 (fontified t face font-lock-type-face) 3 4 (fontified t c-type c-decl-id-start face font-lock-type-face)) #("pop_front" 0 9 (fontified t)) "gtag" #("pop_front" 0 9 (fontified t)) #("sort" 0 4 (fontified t face font-lock-variable-name-face)) #("string" 0 5 (fontified t face font-lock-type-face) 5 6 (fontified t c-type c-decl-id-start face font-lock-type-face)) "helm-gtags-fin" #("int" 0 2 (fontified t face font-lock-type-face) 2 3 (fontified t c-type c-decl-id-start face font-lock-type-face)) "end-of" "backward-" "begin-of-de" "helm-gta" "pack" "glob" "c++" "global-unse" "global" #("ch" 0 2 (fontified t)) "c++" "pac" #("ch" 0 2 (fontified t)) #("ss" 0 2 (fontified t)) "c" #("in" 0 1 (c-is-sws t fontified t) 1 2 (fontified t)) "c" "auto" "ac" #("eval" 0 4 (fontified t)) "auto" "yas/exp" "auto-com" "auto-" "pack" #("push_f" 0 5 (fontified t face font-lock-variable-name-face) 5 6 (fontified t face font-lock-variable-name-face)) "kill-wo" "yas/new" "c++" "color" "lisp-int" "lisp-init" #("my" 0 2 (fontified t face font-lock-comment-face)) "dele" "lisp-in" "lisp-ini" "lisp" "eval-b" #("h" 0 1 (c-in-sws t fontified t)) "ya" "yas/new" "del" "delete" "gdb-man" "gdb" "yas" "yas-mo" "yas" "delete" "yas" "yas/mo" "yas/" "yas" "yas/new" "evalb" #("templa" 0 1 (face font-lock-type-face fontified t) 1 2 (face font-lock-type-face fontified t) 2 3 (face font-lock-type-face fontified t) 3 4 (face font-lock-type-face fontified t) 4 5 (face font-lock-type-face fontified t) 5 6 (face font-lock-type-face c-type c-decl-id-start fontified t)) "pack" "sr" "dot" "0" "pack" "spee" "update-pa" "sr" "pa" "sr" "sr-" "pack" "spacem-them" "c++-" "new"))
(setq minibuffer-history '("clang" "ac-clang-flags" "ac-cl" "/home/slime/.sp" "auto-complete-clang" "lisp-it" "s" #("define-minor-mode" 0 17 (fontified t face font-lock-keyword-face)) #("my-ac-config" 0 12 (fontified t)) "ma " "/home/slime/project/c++/e-c++/linklist/test.cpp" #("convenience" 0 11 (fontified t face font-lock-comment-face)) #("ac-clang-send-syntaxcheck-request" 0 33 (fontified t face font-lock-function-name-face)) #("ac-sources" 0 10 (fontified t)) "/home/slime/.emacs.d/elpa/auto-complete-clang-async-20130526.814/" "/home/slime/.sp" #("main" 0 4 (fontified t face font-lock-function-name-face)) #("pop_front" 0 9 (fontified t)) "pop " "pop_ " "default" "/home/slime/project/c++/e-c++/linklist/" "helm-gta" "/home/slime/.spacemacs" "auto-com" "/home/slime/.sp" "global-uset-key" "auto-com" "/home/slime/.spacemacs" "ac-cl" "/home/slime/.sp" "if " "me" "dot" "Quit" "m" "dot" #("auto-complete" 0 13 (fontified t)) "dot" "Mark" "auto-comp" "m" #("reverse" 0 7 (fontified t face font-lock-function-name-face)) "/home/slime/dev-env/stl/stl_list.h" #("/*-" 0 3 (fontified t face font-lock-comment-face)) "/home/slime/.emacs.d/snippets/c++-mode/single-line-comments" #("H_DEF" 0 5 (fontified t face font-lock-comment-face)) #("_H_LINKLIST_H" 0 13 (fontified t c-in-sws t)) "/home/slime/.emacs.d/snippets/c-mode/c-ifdef" #("YY" 0 1 (c-in-sws t fontified t) 1 2 (c-in-sws t fontified t)) #("H_DEF" 0 5 (face font-lock-comment-face fontified t)) #("nil" 0 3 (fontified t)) #("YY" 0 1 (c-in-sws t fontified t) 1 2 (c-in-sws t fontified t)) #("H_DEF" 0 5 (face font-lock-comment-face fontified t)) #("name" 0 4 (fontified t)) #("H_DEF" 0 5 (face font-lock-comment-face fontified t)) #("_HLINKLIST_H" 0 12 (c-in-sws t fontified t)) "link" "/home/slime/.emacs.d/snippets/c-mode/c-ifdef" "/home/slime/.em" "/home/slime/.emacs.d/snippets/c-mode/" "scr" #("H" 0 1 (c-in-sws t fontified t)) "link" "/home/slime/project/c++/e-c++/linklist/test" "s" "/home/slime/.emacs.d/snippets/c-mode/" #("my" 0 2 (face font-lock-comment-face fontified t)) "/home/slime/.emacs.d/snippets/c-mode/Test" #("my" 0 2 (face font-lock-comment-face fontified t)) "/home/slime/.emacs.d/snippets/c-mode/Test" #("Test" 0 4 (face font-lock-comment-face fontified t)) "/home/slime/.emacs.d/snippets/c-mode/test" "/home/slime/.emacs.d/snippets/c-mode/" "/home/slime/.ema" "/home/slime/project/c++/e-c++/linklist/" #("Test" 0 4 (face font-lock-comment-face fontified t)) "/home/slime/.emacs.d/snippets/c-mode/test" "lin" #("normal" 0 6 (fontified t)) "/home/slime/.spacemacs" "dotspacemacs" #("Search" 0 6 (face font-lock-function-name-face)) "mode" "dotsp" "/home/slime/project/c++/e-c++/linklist/linklist.h" #("H_DEF" 0 5 (face font-lock-comment-face fontified t)) "/home/slime/.emacs.d/snippets/c-mode/c-ifdef" "/home/slime/project/c++/e-c++/linklist/linklist.h" "/home/slime/.emacs.d/snippets/spacemacs-buffer-mode/cc-hdef" "/home/slime/test" #("IFDEF" 0 5 (face font-lock-comment-face fontified t)) "/home/slime/.emacs.d/snippets/spacemacs-buffer-mode/cc-hdef" "dot" #("yasnippet" 0 9 (fontified t)) "dotsp" #("never" 0 5 (face font-lock-comment-face fontified t)) "dot" #("t" 0 1 (fontified t)) "dotspac" "sr" "sr-sp" "/home/slime/.spacemacs" #("in" 0 2 (face font-lock-function-name-face)) #("endif" 0 5 (fontified t face font-lock-preprocessor-face)) "/home/slime/project/c++/e-c++/linklist/" "/home/slime/project/c++/e-c++/linklist/linklist.h" "sr-" "/home/slime/.spacemacs" "/home/slime/project/c++/e-c++/linklist/linklist.h" "sr-" "spacemacs-dark" #("the" 0 3 (fontified t line-prefix #("    " 0 3 (face org-indent)) wrap-prefix #("    " 0 3 (face org-indent) 3 4 (face org-indent)))) #("Spacemacs" 0 9 (face font-lock-function-name-face)) #("in" 0 2 (face font-lock-function-name-face)) #("Spacemacs" 0 9 (face font-lock-function-name-face)) "/home/slime/.sp" #("Spacemacs" 0 9 (face font-lock-function-name-face)) #("in" 0 2 (face font-lock-function-name-face)) "/home/slime/.sp" "/home/slime/.spe" "/home/slime/.sp" "/home/slime/.spacemacs" "fewf" "" "/home/slime/" "/home/slime/.emacs.d/init.el" "/home/slime/project/c++/e-c++/linklist/linklist.h"))
(setq evil-jumps-history '((2859 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2859 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/project/c++/e-c++/linklist/linklist.h") (17329 "/home/slime/.spacemacs") (17005 "/home/slime/.spacemacs") (2860 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/.spacemacs") (2860 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2859 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2859 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/project/c++/e-c++/linklist/linklist.h") (17325 "/home/slime/.spacemacs") (16670 "/home/slime/.spacemacs") (2854 "/home/slime/.spacemacs") (18090 "/home/slime/.spacemacs") (61752 "/home/slime/.emacs.d/elpa/auto-complete-20170124.1845/auto-complete.el") (18048 "/home/slime/.spacemacs") (17566 "/home/slime/.spacemacs") (35 "/home/slime/project/c++/e-c++/linklist/test.cpp") (26 "/home/slime/project/c++/e-c++/linklist/test.cpp") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/project/c++/e-c++/linklist/test.cpp") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2746 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2726 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2733 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2897 "/home/slime/project/c++/e-c++/linklist/linklist.h") (18091 "/home/slime/.spacemacs") (16801 "/home/slime/.spacemacs") (397 "/home/slime/.emacs.d/elpa/auto-complete-clang-async-20130526.814/auto-complete-clang-async.el") (16857 "/home/slime/.spacemacs") (16802 "/home/slime/.emacs.d/elpa/auto-complete-clang-async-20130526.814/auto-complete-clang-async.el") (16783 "/home/slime/.spacemacs") (17525 "/home/slime/.spacemacs") (5440 "/home/slime/.emacs.d/elpa/auto-complete-clang-async-20130526.814/auto-complete-clang-async.el") (17523 "/home/slime/.spacemacs") (1 "/home/slime/.emacs.d/elpa/auto-complete-clang-async-20130526.814/auto-complete-clang-async.el") (17523 "/home/slime/.spacemacs") (2897 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/.spacemacs") (2897 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2804 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1754 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1722 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1700 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1752 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1700 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1747 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1700 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1747 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1745 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1700 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1747 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1752 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1758 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1752 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1750 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2741 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (79 "/home/slime/project/c++/e-c++/linklist/linklist.h") (68 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2828 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/project/c++/e-c++/linklist/linklist.h") (17129 "/home/slime/.spacemacs") (17204 "/home/slime/.spacemacs") (2816 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/.spacemacs") (2816 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2816 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2816 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2819 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/project/c++/e-c++/linklist/linklist.h") (17152 "/home/slime/.spacemacs") (1 "/home/slime/.spacemacs") (1 "/home/slime/.spacemacs") (1 "/home/slime/.spacemacs") (17205 "/home/slime/.spacemacs") (1 "/home/slime/.spacemacs") (2816 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2814 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2847 "/home/slime/project/c++/e-c++/linklist/linklist.h") (2847 "/home/slime/project/c++/e-c++/linklist/linklist.h") (17183 "/home/slime/.spacemacs") (2847 "/home/slime/project/c++/e-c++/linklist/linklist.h") (1 "/home/slime/.spacemacs") (2847 "/home/slime/project/c++/e-c++/linklist/linklist.h")))
(setq mark-ring 'nil)
(setq search-ring '("ac-setup" "ac-common-" "ac-co" "ac-s" "ac-clang-sourceb" "ac-clang-source" "source" "user" "splic" "ME" "M" "ME" "MEM" "fonts" "theme" "fonts"))
(setq regexp-search-ring 'nil)
(setq extended-command-history '("c++-mode" "package-install" "lisp-interaction-mode" "c-mode" "ac-clang-syntax-check" "end-of-defun" "backward-sexp" "beginning-of-defun-raw" "global-set-key" "global-unset-key" "auto-complete-mode" "auto-complete" "sp-kill-word" "delete-file" "lisp-mode" "eval-buffer" "gdb" "yas-global-mode" "yas-minor-mode" "configuration-layer/update-packages" "sr-speedbar-open" "dotspacemacs-mode" "speedbar" "new-frame"))
